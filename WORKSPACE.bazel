load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# Python

http_archive(
    name = "rules_python",
    strip_prefix = "rules_python-main",
    url = "https://github.com/bazelbuild/rules_python/archive/master.zip",
)

load("@rules_python//python:repositories.bzl", "python_register_toolchains")

python_register_toolchains(
    name = "python3_9",
    # Available versions are listed in @rules_python//python:versions.bzl.
    # We recommend using the same version your team is already standardized on.
    python_version = "3.9",
)

load("@python3_9//:defs.bzl", "interpreter")

load("@rules_python//python:pip.bzl", "pip_install")
pip_install(
   name = "my_deps",
   requirements = "//requirements.txt",
)

# C++

http_archive(
    name = "bazel_skylib",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.2.1/bazel-skylib-1.2.1.tar.gz",
        "https://github.com/bazelbuild/bazel-skylib/releases/download/1.2.1/bazel-skylib-1.2.1.tar.gz",
    ],
    sha256 = "f7be3474d42aae265405a592bb7da8e171919d74c16f082a5457840f06054728",
)
load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")
bazel_skylib_workspace()

http_archive(
  name = "rules_cc",
  urls = ["https://github.com/bazelbuild/rules_cc/archive/master.zip"],
  strip_prefix = "rules_cc-main",
)

http_archive(
    name = "com_github_google_benchmark",
    urls = ["https://github.com/google/benchmark/archive/master.zip"],
    strip_prefix = "benchmark-bf585a2789e30585b4e3ce6baf11ef2750b54677",
)

# Google test

http_archive(
    name = "com_google_googletest",
    strip_prefix = "googletest-main",
    url = "https://github.com/google/googletest/archive/master.zip",
)

# Abseil

http_archive(
  name = "com_google_absl",
  urls = ["https://github.com/abseil/abseil-cpp/archive/master.zip"],
  strip_prefix="abseil-cpp-master"
)

